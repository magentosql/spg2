<?php
$element = $this->getElement();
$note = $element->getNote() ? '<div class="note" id="' . $element->getId() . '-note">' . $element->getNote() . '</div>' : '';
$fieldId = ($element->getHtmlContainerId()) ? ' id="' . $element->getHtmlContainerId() . '"' : '';
$fieldClass = "admin__field field field-{$element->getId()} {$element->getCssClass()}";
$fieldClass .= ($element->getRequired()) ? ' required _required' : '';
$fieldClass .= ($note) ? ' with-note' : '';
$fieldClass .= (!$element->getLabelHtml()) ? ' no-label' : '';

$fieldAttributes = $fieldId . ' class="' . $fieldClass . '" '
    . $block->getUiId('form-field', $element->getId())
    . ($element->getFieldExtraAttributes() ? ' ' . $element->getFieldExtraAttributes() : '');
?>
<div<?php /* @escapeNotVerified */ echo $fieldAttributes ?>>
    <?php echo $element->getLabelHtml() ?>
    <div class="admin__field-control control">

        <div class="admin__field grid">
        <table cellspacing="0" class="data" cellpadding="0" style="width: 785px">
            <col width="100">
            <col width="200">
            <col width="200">
            <col width="150">
            <col width="135">
            <thead>
                <tr class="headings">
                    <th><?php echo __('Amount') ?></th>
                    <th><?php echo __('Comment') ?></th>
                    <th><?php echo __('PO ID') ?></th>
                    <th><?php echo __('PO Type') ?></th>
                    <th><?php echo __('Action') ?></th>
                </tr>
            </thead>
            <tfoot>
                <tr>
                    <th></th>
                    <th colspan=4 class="a-right"><?php echo $this->getAddButtonHtml() ?></th>
                </tr>
            </tfoot>
            <tbody>
                <tr id="adjustments-table" class="no-display template" id="row-template">
                    <td><input name="adjustment[amount][{{id}}]" class="input-text validate-number required-option" type="text" /></td>
                    <td><textarea style="width: 250px; height: 100px" class="input-text" type="text" name="adjustment[comment][{{id}}]"></textarea></td>
                    <td><input name="adjustment[po_id][{{id}}]" class="input-text" type="text" /></td>
                    <td><?php echo $this->getPoTypeSelect('adjustment[po_type][{{id}}]') ?></td>
                    <td class="a-left">
                        <?php echo $this->getDeleteButtonHtml() ?>
                    </td>
                </tr>
            </tbody>
        </table>

        </div>
        <?php /* @escapeNotVerified */ echo $note ?>
    </div>
</div>

<script type="text/javascript">
//<![CDATA[
require(["jquery","prototype","domReady!"], function(jQuery) {
    var optionDefaultInputType = 'radio';

// IE removes quotes from element.innerHTML whenever it thinks they're not needed, which breaks html.
    var templateText =
        '<tr class="option-row">' +
        '<td><input name="adjustment[amount][{{id}}]" class="input-text validate-number required-option" type="text" /></td>' +
        '<td><textarea style="width: 250px; height: 100px" class="input-text" type="text" name="adjustment[comment][{{id}}]"></textarea></td>' +
        '<td><input name="adjustment[po_id][{{id}}]" class="input-text" type="text" /></td>' +
        '<td><?php echo preg_replace('/\s+/', ' ', $this->getPoTypeSelect('adjustment[po_type][{{id}}]')) ?></td>' +
        '<td class="a-left">' +
        '<?php echo preg_replace('/\s+/', ' ', $this->getDeleteButtonHtml()) ?>' +
        '</td>' +
        '<\/tr>';

    var attributeOption = {
        table: $('adjustments-table'),
        templateSyntax: /(^|.|\r|\n)({{(\w+)}})/,
        templateText: templateText,
        itemCount: 0,
        totalItems: 0,
        add: function (data) {
            this.template = new Template(this.templateText, this.templateSyntax);
            if (!data.id) {
                data = {};
                data.id = 'option_' + this.itemCount;
            }
            if (!data.intype)
                data.intype = optionDefaultInputType;

            Element.insert(this.table, {after: this.template.evaluate(data)});
            this.bindRemoveButtons();
            this.itemCount++;
            this.totalItems++;
            this.updateItemsCountField();
        },
        remove: function (event) {
            var element = $(Event.findElement(event, 'tr')); // !!! Button already
            // have table parent in safari
            // Safari workaround
            element.ancestors().each(function (parentItem) {
                if (parentItem.hasClassName('option-row')) {
                    element = parentItem;
                    throw $break;
                } else if (parentItem.hasClassName('box')) {
                    throw $break;
                }
            });


            if (element) {
                var elementFlags = element.getElementsByClassName('delete-flag');
                if (elementFlags[0]) {
                    elementFlags[0].value = 1;
                }

                element.addClassName('no-display');
                element.addClassName('template');
                element.hide();
                this.totalItems--;
                this.updateItemsCountField();
            }
        },
        updateItemsCountField: function () {
            /*
            if (this.totalItems > 0) {
                $('option-count-check').value = '1';
            } else {
                $('option-count-check').value = '';
            }
            */
        },
        bindRemoveButtons: function () {
            var buttons = $$('.delete-option');
            for (var i = 0; i < buttons.length; i++) {
                if (!$(buttons[i]).binded) {
                    $(buttons[i]).binded = true;
                    Event.observe(buttons[i], 'click', this.remove.bind(this));
                }
            }
        }

    }
    if ($('row-template')) {
        $('row-template').remove();
    }
    attributeOption.bindRemoveButtons();

    if ($('add_new_option_button')) {
        Event.observe('add_new_option_button', 'click', attributeOption.add.bind(attributeOption));
    }
    Validation.addAllThese([
        ['required-option', '<?php echo __('Failed') ?>', function (v) {
            return !Validation.get('IsEmpty').test(v);
        }]]);
    Validation.addAllThese([
        ['required-options-count', '<?php echo __('Amount is required') ?>', function (v) {
            return !Validation.get('IsEmpty').test(v);
        }]]);
});
//]]>
</script>

