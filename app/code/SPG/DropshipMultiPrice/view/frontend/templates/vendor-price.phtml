<?php
$_hlp = \Magento\Framework\App\ObjectManager::getInstance()->get('Unirgy\DropshipMultiPrice\Helper\Data');
$_udHlp = \Magento\Framework\App\ObjectManager::getInstance()->get('Unirgy\Dropship\Helper\Data');
if (($isUdc2c = $_udHlp->isModuleActive('udsell'))) {
    $_cHlp = \Magento\Framework\App\ObjectManager::getInstance()->get('Unirgy\DropshipSellYours\Helper\Data');
}
if (($isMicro = $_udHlp->isModuleActive('umicrosite'))) {
    $_msHlp = \Magento\Framework\App\ObjectManager::getInstance()->get('Unirgy\DropshipMicrosite\Helper\Data');
}
$_helper = \Magento\Framework\App\ObjectManager::getInstance()->get('Magento\Catalog\Helper\Output');
$_product = $this->getProduct();
$_product = !$_product ? \Magento\Framework\App\ObjectManager::getInstance()->get('Magento\Framework\Registry')->registry('current_product') : $_product;
$_product = !$_product ? \Magento\Framework\App\ObjectManager::getInstance()->get('Magento\Framework\Registry')->registry('product') : $_product;
$preCfgVid = null;
if (($isCfgMode = $_product->getConfigureMode())) {
    $preCfgVid = $_product->getPreconfiguredUdropshipVendor();
}


?>
<?php if ($vendors = $_product->getMultiVendorData()): ?>
    <?php extract($_hlp->getGroupedMultipriceData($_product)); ?>
    <h3>
        <?php echo __('Select Vendor') ?>
        <?php if ($isUdc2c): ?> | <a
            href="<?php echo $this->getUrl('udsell/index/sell', ['id' => $_product->getId()]) ?>"><?php echo __('Sell Yours') ?></a><?php endif ?>
    </h3>
    <ul id="product-vendors-states" class="tabs items">
    </ul>
    <div class="tabs-content">
        <div id="product-vendors-contents">
            <table id="product-vendors-table" class="data-table price-comparison-table">
                <col width="10"/>
                <col width="200"/>
                <col width="150"/>
                <col/>
                <col width="300"/>
                <thead>
                <tr>
                    <th><?php echo __('Price') ?></th>
                    <th><?php echo __('Seller') ?></th>
                    <th class="last">&nbsp;</th>
                </tr>
                <tr style="display:none" id="product_vendors_row_template">
                    <td>$PRICE_HTML
                        <!--span id="product_vendors_$ROW_freeshipping" class="shipping-price">+ Free Shipping</span>
                        <span id="product_vendors_$ROW_freeshipping_no" class="shipping-price">+ $SHIPPING_PRICE_HTML (shipping)</span-->
                        $TIER_PRICE_HTML
                    </td>
                    <td>
                        <div class="seller-info">
                            <a id="product_vendors_$ROW_vendor_logo" href="$VENDOR_BASE_URL" class="seller-logo"></a>
                            <a href="$VENDOR_BASE_URL" class="seller-name"><strong>$VENDOR_NAME</strong></a>
                            <div class="seller-rating">
                                <div id="product_vendors_$ROW_review_html">
                                    <span class="label"><?php echo __('Seller Rating') ?>:</span>
                                    $REVIEW_HTML
                                </div>
                                <p class="availability in-stock"><span>In Stock.</span></p>
                                <p>$VENDOR_TITLE</p>
                            </div>
                        </div>
                    </td>
                    <td class="last a-center">
                        <div id="product_vendors_$ROW_in_stock" class="box-tocart">
                            <div class="fieldset">
                                <div class="field qty">
                                    <input class="input-text qty" id="product_vendors_$ROW_qty" type="text" name="__qty"
                                           value="<?php echo $this->getProductDefaultQty() ?>" maxlength="12"
                                           class="__qty"/>
                                    <input style="display: none" id="product_vendors_$ROW_udropship_vendor" type="radio"
                                           name="__udropship_vendor" value="$VENDOR_ID" class="__udropship_vendor"/>
                                </div>
                                <div class="actions">
                                    <?php if ($isCfgMode): ?>
                                        <button type="button" title="Update Cart"
                                                onclick="udmpChangeSelectedVendor('product_vendors_$ROW_udropship_vendor', true, this);"
                                                class="button btn-cart"><span><?php echo __('Update Cart') ?></span>
                                        </button>
                                    <?php else: ?>
                                        <button type="button" title="Add to Cart"
                                                onclick="udmpChangeSelectedVendor('product_vendors_$ROW_udropship_vendor', true, this);"
                                                class="action primary tocart">
                                            <span><?php echo __('Add to Cart') ?></span></button>
                                    <?php endif ?>
                                </div>
                            </div>
                        </div>
                        <div id="product_vendors_$ROW_out_of_stock"><p class="availability out-of-stock">
                                <span><?php echo __('Out of stock') ?></span></p></div>
                    </td>
                </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
        </div>
    </div>
    <script type="text/javascript">
        require([
            'underscore', 'jquery', "prototype", 'mage/mage',
            'Magento_Catalog/product/view/validation',
            'Magento_Catalog/js/catalog-add-to-cart',
            'domReady!'
        ], function (_, jQuery) {

            window['udmpChangeSelectedVendor'] = function (elem, addToCart, btn) {
                if (typeof $('product_addtocart_form').udropship_vendor == 'undefined') {
                    var el = document.createElement("input");
                    el.type = "hidden";
                    el.name = "udropship_vendor";
                    $('product_addtocart_form').appendChild(el);
                }
                <?php if ($isCfgMode && $preCfgVid): ?>
                $('product_addtocart_form').udropship_vendor.value = '<?php echo $preCfgVid?>';
                <?php endif ?>
                if (addToCart) {
                    try {
                        $$('#product-vendors-table input.__udropship_vendor').each(function (item) {
                            return item.checked = false;
                        });
                        $(elem).checked = true;
                        $('product_addtocart_form').udropship_vendor.value = $(elem).value;
                    } catch (e) {
                        console.log(e);
                    }
                    try {
                        $('product_addtocart_form').qty.value = $(elem).up('.fieldset').down('input.qty').value;
                    } catch (e) {
                        console.log(e);
                    }
                    jQuery(btn).addClass('udmp-addtocart-selected');
                    var jqAddToCartForm = jQuery('#product_addtocart_form');
                    var jqAddToCartWidget = jqAddToCartForm.data('mageCatalogAddToCart');
                    if (jqAddToCartWidget) {
                        jqAddToCartWidget.submitForm(jqAddToCartForm);
                    } else {
                        jqAddToCartForm.catalogAddToCart({
                            bindSubmit: false,
                        });
                        jqAddToCartWidget = jqAddToCartForm.data('mageCatalogAddToCart');
                        jqAddToCartWidget.submitForm(jQuery('#product_addtocart_form'));
                    }
                }
            };
            window['udmpChangeSelectedVendor']();

            var UnirgyVendorProducts = Class.create({
                initialize: function (mvData, config) {
                    this.mvData = mvData;
                    this.config = {
                        statesId: 'product-vendors-states',
                        stateIdPrefix: 'vendor_state_',
                        stateClass: 'vendor_state',
                        tableId: 'product-vendors-table',
                        rowTemplateId: 'product_vendors_row_template',
                        addToCartFormId: 'product_addtocart_form',
                        pagesHtml: '#{pageItemsHtml}',
                        pageItemHtml: '<li>#{pageNumberHtml}</li>',
                        pageItemActiveHtml: '<li class="current">#{pageNumberHtml}</li>',
                        pageNumberHtml: '<a href="javascript: void;">#{pageNumber}</a>',
                        pageNumberActiveHtml: '#{pageNumber}',
                        stateHtml: '<li id="vendor_state_#{html_value}" class="vendor_state"><a href="javascript:void(0);">#{html_label}</a></li>',
                        pageSize: 2,
                        vendor_logo: ''
                    };
                    Object.extend(this.config, config);
                    this.stateHtmlTpl = new Template(this.config.stateHtml);
                    this.lastRowNum = 1;
                    this.states = $(this.config.statesId);
                    this.tbody = $(this.config.tableId).down('tbody');
                },
                processProductId: function (pId) {
                    if (!this.processedProducts) {
                        this.processedProducts = {};
                    }
                    if (!this.processedProducts.pId) {
                        this.processedProducts.pId = {};
                    }
                },
                getProductId: function () {
                    return this.productId || this.config.defaultProductId;
                },
                setProductId: function (pId) {
                    this.productId = pId;
                    this.states.update('');
                    var pId = this.getProductId();
                    if (this.mvData[pId]) {
                        var gmpData = this.mvData[pId].grouped_multiprice_data;
                        if (gmpData && gmpData.canonicStates) {
                            $H(gmpData.canonicStates).each(function (state) {
                                this.states.insert(this.stateHtmlTpl.evaluate(state.value));
                            }.bind(this));
                            decorateGeneric(this.states.childElements());
                            this.states.childElements().each(function (stateEl) {
                                stateEl.observe('click', this.setState.bind(this, stateEl));
                            }.bind(this));
                            var stateAll = $('vendor_state_all') || this.states.down();
                            this.state = '';
                            if (stateAll) this.setState(stateAll)
                        }
                    }

                },
                stateClass: function (dotPrefix) {
                    dotPrefix = Object.isUndefined(dotPrefix) ? true : dotPrefix;
                    if (this.config.stateClass.startsWith('.') && !dotPrefix) {
                        return this.config.stateClass.substr(1);
                    } else if (!this.config.stateClass.startsWith('.') && dotPrefix) {
                        return '.' + this.config.stateClass;
                    }
                    return this.config.stateClass;
                },
                getSwatchWidget: function () {
                    var $swatchWidget;
                    var $swatch;
                    if (($swatch = jQuery("[data-role=swatch-options]")) && $swatch.length > 0 && _.isFunction($swatch.data) && ($swatchWidget = $swatch.data('mage-SwatchRenderer'))) {
                    } else if (($swatch = jQuery(".swatch-opt")) && $swatch.length > 0 && _.isFunction($swatch.data) && ($swatchWidget = $swatch.data('customSwatchRenderer'))) {
                    }
                    return $swatchWidget;
                },
                superAttributesChanged: function () {
                    var $swatchWidget, simplePid;
                    if (($swatchWidget = this.getSwatchWidget())) {
                        if (this.optionsMap) {
                            $swatchWidget.optionsMap = (JSON.parse(JSON.stringify(this.optionsMap)));
                        }
                        simplePid = $swatchWidget.getProduct();
                        this.setProductId(simplePid);
                    } else if (sPid = this.getSimplePid()) {
                        this.setProductId(sPid);
                    }
                },
                getSimplePid: function () {
                    var superAttrs = jQuery("[name^=super_attribute]");
                    var sPid = 0;
                    var pIds;
                    if (superAttrs.length > 0) {
                        superAttrs.each(function (idx, el) {
                            var allOptions = el.config.options,
                                value = el.value,
                                config;

                            config = _.filter(allOptions, function (option) {
                                return option.id === value;
                            });
                            config = _.first(config);

                            var candidates = _.isEmpty(config) ?
                                [] :
                                config.allowedProducts;
                            pIds = pIds == undefined ? candidates : _.intersection(pIds, candidates);
                        });
                    }
                    return pIds != undefined && pIds.length > 0 ? _.first(pIds) : 0;
                },
                _initConfigurable: function () {
                    var superAttrs = jQuery("[name^=super_attribute]");
                    if (superAttrs.length > 0) {
                        if (this.getSwatchWidget()) {
                            this.optionsMap = (JSON.parse(JSON.stringify(this.getSwatchWidget().optionsMap)));
                        }
                        jQuery("[data-role=priceBox]").on('updatePrice', _.bind(this.superAttributesChanged, this))
                        superAttrs.on('change', _.bind(this.superAttributesChanged, this))
                        superAttrs.on('click', _.bind(this.superAttributesChanged, this))
                        clearInterval(this.initConfigurableTimer);
                    }
                },
                initConfigurable: function () {
                    this.initConfigurableTimer = setInterval(_.bind(this._initConfigurable, this), 1000)
                },
                setState: function (state) {
                    var state = this.processState(state);
                    if (this.state == state) return;
                    this.state = state;
                    if (this.states) {
                        this.states.select(this.stateClass(true)).each(function (stateEl) {
                            var state = this.processState(stateEl)
                            if (state) {
                                stateEl.removeClassName('active');
                                if (this.state == state) {
                                    stateEl.addClassName('active');
                                }
                            }
                        }.bind(this));
                    }
                    var pId = this.getProductId();
                    this.tbody.update('');
                    this.lastRowNum = 1;
                    if (this.mvData[pId]) {
                        var foundDefault = false;
                        var defaultVid = $('product_addtocart_form').udropship_vendor.value;
                        $A(this.mvData[pId].mvData).each(function (pair_value) {
                            if (pair_value.canonic_state == state || state == 'all') {
                                this.addRow(pair_value, this.mvData[pId]);
                            }
                            if (defaultVid && pair_value.vendor_id == defaultVid) {
                                foundDefault = true;
                            }
                        }.bind(this));
                        if (!foundDefault) {
                            try {
                                $('product_addtocart_form').down('.btn-cart').disable();
                                $('product_addtocart_form').down('.btn-cart').addClassName('disabled');
                                $('product_addtocart_form').down('.qty').disable();
                            } catch (e) {
                            }
                        } else {
                            try {
                                $('product_addtocart_form').down('.btn-cart').enable();
                                $('product_addtocart_form').down('.btn-cart').removeClassName('disabled');
                                $('product_addtocart_form').down('.qty').enable();
                            } catch (e) {
                            }
                        }
                    }
                },
                processState: function (state) {
                    state = state || '';
                    if (Object.isElement(state)
                        || state.startsWith(this.config.stateIdPrefix) && $(state)
                    ) {
                        var stateEl = $(state);
                        if (!stateEl.hasClassName(this.stateClass(false))) {
                            stateEl = stateEl.down(this.stateClass(true)) || stateEl.up(this.stateClass(true));
                        }
                        var state = stateEl.id || '';
                        if (state && state.startsWith(this.config.stateIdPrefix)) {
                            state = state.substr(this.config.stateIdPrefix.length);
                        }
                    }
                    return state;
                },
                doFilter: function (state, page) {

                },
                addRow: function (inData, meta) {
                    var rowHtml = $(this.config.rowTemplateId).innerHTML;
                    var data = {
                        is_in_stock: false,
                        is_certified: false,
                        is_pro: false,
                        vendor_title: '',
                        review_html: '',
                        vendor_name: '',
                        vendor_id: '',
                        is_allowed_microsite: false,
                        state_label: '',
                        state_label: '',
                        state_descr: '',
                        price_html: '',
                        tier_price_html: '',
                        vendor_base_url: ''
                    };
                    Object.extend(data, inData);
                    var isIE = (/msie [1-8]\./i).test(navigator.userAgent);
                    var numericVars = ['qty', 'weight'];
                    var forcedNumericVars = [];
                    data.row = this.lastRowNum++;
                    var keys = $H(data).keys().sortBy(function (s) {
                        return ('' + s).length
                    }).reverse();
                    for (j = 0; j < keys.length; j++) {
                        var i = keys[j];
                        value = data[i] || '';
                        if (-1 != numericVars.indexOf(i) && data[i]
                            || -1 != forcedNumericVars.indexOf(i)
                        ) {
                            value *= 1;
                            data[i] = value;
                        }
                        if (i !== 'row' && isIE) value = '"' + value + '"';
                        rowHtml = rowHtml.replace(new RegExp('\\$' + i.toUpperCase(), 'g'), value);
                    }
                    this.tbody.insert('<tr>' + rowHtml + '</tr>');

                    var trs = this.tbody.childElements();
                    var tr = trs[trs.length - 1];
                    tr.addClassName(this.lastRowNum % 2 ? 'odd' : 'even');
                    ['is_featured', 'is_certified', 'is_pro', 'freeshipping', 'vendor_logo', 'review_html'].each(function (key) {
                        if (!data[key]) {
                            try {
                                $('product_vendors_' + data.row + '_' + key).remove();
                            } catch (e) {
                            }
                        }
                    });
                    ['is_featured', 'is_certified', 'is_pro', 'freeshipping', 'vendor_logo', 'review_html'].each(function (key) {
                        if (data[key]) {
                            try {
                                $('product_vendors_' + data.row + '_' + key + '_no').remove();
                            } catch (e) {
                            }
                        }
                    });
                    if (data['vendor_logo'] && $('product_vendors_' + data.row + '_vendor_logo')) {
                        var vlImg = document.createElement("img");
                        vlImg.src = data['vendor_logo'];
                        if (data['vendor_logo_width']) {
                            vlImg.width = data['vendor_logo_width'];
                        }
                        if (data['vendor_logo_height']) {
                            vlImg.height = data['vendor_logo_height'];
                        }
                        $('product_vendors_' + data.row + '_vendor_logo').appendChild(vlImg);
                    }
                    try {
                        if (data['is_allowed_microsite']) {
                            $('product_vendors_' + data.row + '_vendor_name').remove();
                        } else {
                            $('product_vendors_' + data.row + '_vendor_name_link').remove();
                        }
                    } catch (e) {
                    }
                    try {
                        if (!data['is_in_stock']) {
                            $('product_vendors_' + data.row + '_udropship_vendor').remove();
                            $('product_vendors_' + data.row + '_in_stock').remove();
                        } else {
                            $('product_vendors_' + data.row + '_out_of_stock').remove();
                        }
                    } catch (e) {
                    }
                    try {
                        if ($(this.config.addToCartFormId).udropship_vendor
                            && $('product_vendors_' + data.row + '_udropship_vendor')
                            && $(this.config.addToCartFormId).udropship_vendor.value == $('product_vendors_' + data.row + '_udropship_vendor').value
                        ) {
                            $('product_vendors_' + data.row + '_udropship_vendor').checked = true;
                        }
                    } catch (e) {
                    }
                }
            });
            var unirgyProductVendors<?php echo $_product->getId()?> = new UnirgyVendorProducts(<?php echo $_hlp->getMultiPriceDataJson($this) ?>, {defaultProductId: '<?php echo $_product->getId()?>'});
            try {
                unirgyProductVendors<?php echo $_product->getId()?>.setProductId();
                <?php if ($_product->getTypeId() == 'configurable'): ?>
                unirgyProductVendors<?php echo $_product->getId()?>.initConfigurable();
                <?php endif ?>
            } catch (e) {
                console.log(e)
            }
        });

        //]]>
    </script>
    <style type="text/css">
        #product-vendors-states {
            display: none;
        }
    </style>
<?php endif; ?>
